root = true

[*]
tab_width = 4
indent_style = tab
indent_size = 4

[*.cs]

# Analyzers

## IDE ##

# IDE1006: Naming rule violation (end of the file)
dotnet_diagnostic.IDE1006.severity = error

# IDE0001: Simplify name
dotnet_diagnostic.IDE0001.severity = error

# IDE0002: Simplify member access
dotnet_diagnostic.IDE0002.severity = error

# IDE0003: Remove this or Me qualification
dotnet_diagnostic.IDE0003.severity = error

# IDE0009: Add this or Me qualification
dotnet_diagnostic.IDE0009.severity = none
dotnet_style_qualification_for_field = true
dotnet_style_qualification_for_property = true
dotnet_style_qualification_for_method = true
dotnet_style_qualification_for_event = true

# IDE0004: Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = error

# IDE0005: Using directive is unnecessary
dotnet_diagnostic.IDE0005.severity = error

# IDE0010: Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = none

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = none

# IDE0016: Use throw expression
dotnet_diagnostic.IDE0016.severity = error

# IDE0019: Use pattern matching to avoid as followed by a null check
dotnet_diagnostic.IDE0019.severity = error

# IDE0020: Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.IDE0020.severity = error
# IDE0038: Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.IDE0038.severity = error

# IDE0021: Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = error

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = error
csharp_style_expression_bodied_methods = when_on_single_line

# IDE0023: Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = error
# IDE0024: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = error
csharp_style_expression_bodied_operators = when_on_single_line

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = error

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = error

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = error

# IDE0028: Use collection initializers
dotnet_diagnostic.IDE0028.severity = error

# IDE0029: Null check can be simplified
dotnet_diagnostic.IDE0029.severity = none

# IDE0030: Null check can be simplified
dotnet_diagnostic.IDE0030.severity = none

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = error

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = error

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = error

# IDE0034: Simplify default expression
dotnet_diagnostic.IDE0034.severity = error

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = error

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = error

# IDE0039: Use local function instead of lambda
dotnet_diagnostic.IDE0039.severity = error

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = error

# IDE0041: Use is null check
dotnet_diagnostic.IDE0041.severity = error

# IDE0042: Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = error

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = error

# IDE0045: Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = error

# IDE0046: Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = error

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = none

# IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = none

# IDE0049: Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = error

# IDE0050: Convert anonymous type to tuple
dotnet_diagnostic.IDE0050.severity = error

# IDE0051: Remove unused private member
dotnet_diagnostic.IDE0051.severity = error

# IDE0052: Remove unread private member
dotnet_diagnostic.IDE0052.severity = error

# IDE0053: Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = error

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = none

# IDE0055: Formatting rule
dotnet_diagnostic.IDE0055.severity = error

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = error

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = error

# IDE0058: Remove unnecessary expression value
dotnet_diagnostic.IDE0058.severity = none

# IDE0059: Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = none

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = none

# IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = error
csharp_style_expression_bodied_local_functions = when_on_single_line

# IDE0062: Make local function static
dotnet_diagnostic.IDE0062.severity = error

# IDE0063: Use simple using statement
dotnet_diagnostic.IDE0063.severity = error

# IDE0064: Make struct fields writable (not directly supported)
dotnet_diagnostic.IDE0064.severity = error

# IDE0065: using directive placement (not directly supported)
dotnet_diagnostic.IDE0065.severity = error

# IDE0066: Use switch expression (dotnet_style_prefer_switch_expression is already set)
dotnet_diagnostic.IDE0066.severity = error

# IDE0070: Use System.HashCode.Combine (not directly supported)
dotnet_diagnostic.IDE0070.severity = error

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = none

# IDE0072: Add missing cases to switch expression (not directly supported)
dotnet_diagnostic.IDE0072.severity = none

# IDE0073: Use file header (not directly supported)
dotnet_diagnostic.IDE0073.severity = none

# IDE0074: Use coalesce compound assignment (dotnet_style_prefer_compound_assignment is already set)
dotnet_diagnostic.IDE0074.severity = none

# IDE0075: Simplify conditional expression (dotnet_style_prefer_simplified_boolean_expressions is already set)
dotnet_diagnostic.IDE0075.severity = none

# IDE0076: Remove invalid global SuppressMessageAttribute (not directly supported)
dotnet_diagnostic.IDE0076.severity = error

# IDE0077: Avoid legacy format target in global SuppressMessageAttribute (not directly supported)
dotnet_diagnostic.IDE0077.severity = error

# IDE0078: Use pattern matching (csharp_style_prefer_pattern_matching is already set)
dotnet_diagnostic.IDE0078.severity = none

# IDE0079: Remove unnecessary suppression (not directly supported)
dotnet_diagnostic.IDE0079.severity = error

# IDE0080: Remove unnecessary suppression operator (not directly supported)
dotnet_diagnostic.IDE0080.severity = error

# IDE0081: Remove ByVal (not directly supported)
dotnet_diagnostic.IDE0081.severity = error

# IDE0082: Convert typeof to nameof (not directly supported)
dotnet_diagnostic.IDE0082.severity = error

# IDE0083: Use pattern matching (not operator) (csharp_style_prefer_pattern_matching is already set)
dotnet_diagnostic.IDE0083.severity = none

# IDE0090: Simplify new expression (csharp_style_implicit_object_creation_when_type_is_apparent is already set)
dotnet_diagnostic.IDE0090.severity = none

# IDE0100: Remove unnecessary equality operator (not directly supported)
dotnet_diagnostic.IDE0100.severity = none

# IDE0110: Remove unnecessary discard (not directly supported)
dotnet_diagnostic.IDE0110.severity = error

# IDE0120: Simplify LINQ expression (not directly supported)
dotnet_diagnostic.IDE0120.severity = none

# IDE0130: Namespace does not match folder structure (dotnet_style_namespace_match_folder is already set)
dotnet_diagnostic.IDE0130.severity = error

# IDE0150: Prefer null check over type check (csharp_style_prefer_null_check_over_type_check is already set)
dotnet_diagnostic.IDE0150.severity = none

# IDE0160: Use block-scoped namespace
dotnet_diagnostic.IDE0160.severity = none
# IDE0161: Use file-scoped namespace
dotnet_diagnostic.IDE0161.severity = error
csharp_style_namespace_declarations = file_scoped

# IDE0170: Simplify property pattern (not directly supported)
dotnet_diagnostic.IDE0170.severity = error

# IDE0180: Use tuple to swap values (csharp_style_prefer_tuple_swap is already set)
dotnet_diagnostic.IDE0180.severity = none

# IDE0200: Remove unnecessary lambda expression (csharp_style_prefer_method_group_conversion is already set)
dotnet_diagnostic.IDE0200.severity = none

# IDE0210: Convert to top-level statements (csharp_style_prefer_top_level_statements is already set)
dotnet_diagnostic.IDE0210.severity = none

# IDE0211: Convert to 'Program.Main' style program (csharp_style_prefer_top_level_statements is already set)
dotnet_diagnostic.IDE0211.severity = none

# IDE0220: Add explicit cast in foreach loop (dotnet_style_prefer_foreach_explicit_cast_in_source is already set)
dotnet_diagnostic.IDE0220.severity = error

# IDE0230: Use UTF-8 string literal (csharp_style_prefer_utf8_string_literals is already set)
dotnet_diagnostic.IDE0230.severity = error

# IDE0240: Nullable directive is redundant (not directly supported)
dotnet_diagnostic.IDE0240.severity = error

# IDE0241: Nullable directive is unnecessary (not directly supported)
dotnet_diagnostic.IDE0241.severity = error

# IDE0250: Struct can be made 'readonly' (not directly supported)
dotnet_diagnostic.IDE0250.severity = none

# IDE0251: Member can be made 'readonly' (not directly supported)
dotnet_diagnostic.IDE0251.severity = none

# IDE0260: Use pattern matching (csharp_style_prefer_pattern_matching is already set)
dotnet_diagnostic.IDE0260.severity = error

# IDE0270: Null check can be simplified (dotnet_style_coalesce_expression is already set)
dotnet_diagnostic.IDE0270.severity = error

# IDE0280: Use nameof (not directly supported)
dotnet_diagnostic.IDE0280.severity = error

# IDE0290: Use primary constructor
dotnet_diagnostic.IDE0290.severity = error
csharp_style_prefer_primary_constructors = false

# IDE0300: Use collection expression for array (dotnet_style_prefer_collection_expression is already set)
dotnet_diagnostic.IDE0300.severity = error

# IDE0301: Use collection expression for empty (dotnet_style_prefer_collection_expression is already set)
dotnet_diagnostic.IDE0301.severity = error

# IDE0302: Use collection expression for stackalloc (dotnet_style_prefer_collection_expression is already set)
dotnet_diagnostic.IDE0302.severity = error

# IDE0303: Use collection expression for Create() (dotnet_style_prefer_collection_expression is already set)
dotnet_diagnostic.IDE0303.severity = error

# IDE0304: Use collection expression for builder (dotnet_style_prefer_collection_expression is already set)
dotnet_diagnostic.IDE0304.severity = error

# IDE0305: Use collection expression for fluent (dotnet_style_prefer_collection_expression is already set)
dotnet_diagnostic.IDE0305.severity = error


## CS ##
dotnet_diagnostic.CS4014.severity = none


## CA ##

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = error

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = none

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = none

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = error

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = none

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = none

# CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = error

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = error

# CA1014: Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with AssemblyVersionAttribute
dotnet_diagnostic.CA1016.severity = none

# CA1017: Mark assemblies with ComVisibleAttribute
dotnet_diagnostic.CA1017.severity = none

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = none

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = none

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = error

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = error

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = none

# CA1028: Enum storage should be Int32
dotnet_diagnostic.CA1028.severity = error

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = error

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = error

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = error

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = none

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = error

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = error

# CA1043: Use integral or string argument for indexers
dotnet_diagnostic.CA1043.severity = none

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = error

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = error

# CA1046: Do not overload operator equals on reference types
dotnet_diagnostic.CA1046.severity = error

# CA1047: Do not declare protected members in sealed types
dotnet_diagnostic.CA1047.severity = error

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = error

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = none

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = error

# CA1053: Static holder types should not have constructors
dotnet_diagnostic.CA1053.severity = error

# CA1054: URI parameters should not be strings
dotnet_diagnostic.CA1054.severity = none

# CA1055: URI return values should not be strings
dotnet_diagnostic.CA1055.severity = none

# CA1056: URI properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = error

# CA1060: Move P/Invokes to NativeMethods class
dotnet_diagnostic.CA1060.severity = none

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = error

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1063: Implement IDisposable correctly
dotnet_diagnostic.CA1063.severity = none

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = error

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = error

# CA1066: Implement IEquatable when overriding Equals
dotnet_diagnostic.CA1066.severity = none

# CA1067: Override Equals when implementing IEquatable
dotnet_diagnostic.CA1067.severity = none

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = error

# CA1069: Enums should not have duplicate values
dotnet_diagnostic.CA1069.severity = error

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = error

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = error

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = none

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = none

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = none

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# CA1309: Use ordinal StringComparison
dotnet_diagnostic.CA1309.severity = none

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = none

# CA1311: Specify a culture or use an invariant version
dotnet_diagnostic.CA1311.severity = none

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = none

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = error

# CA1417: Do not use OutAttribute on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = error

# CA1418: Use valid platform string
dotnet_diagnostic.CA1418.severity = error

# CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = none

# CA1420: Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1420.severity = none

# CA1421: Method uses runtime marshalling when DisableRuntimeMarshallingAttribute is applied
dotnet_diagnostic.CA1421.severity = none

# CA1422: Validate platform compatibility
dotnet_diagnostic.CA1422.severity = none

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = error

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = error

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = error

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = none

# CA1507: Use nameof in place of string
dotnet_diagnostic.CA1507.severity = error

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = error

# CA1509: Invalid entry in code metrics configuration file
dotnet_diagnostic.CA1509.severity = none

# CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.CA1510.severity = none

# CA1511: Use ArgumentException throw helper
dotnet_diagnostic.CA1511.severity = none

# CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1512.severity = none

# CA1513: Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1513.severity = none

# CA1514: Avoid redundant length argument
dotnet_diagnostic.CA1514.severity = error

# CA1515: Consider making public types internal
dotnet_diagnostic.CA1515.severity = none

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = none

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = error

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = none

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = none

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = error

# CA1713: Events should not have before or after prefix
dotnet_diagnostic.CA1713.severity = error

# CA1714: Flags enums should have plural names
dotnet_diagnostic.CA1714.severity = none

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = none

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = none

# CA1717: Only FlagsAttribute enums should have plural names
dotnet_diagnostic.CA1717.severity = none

# CA1720: Identifiers should not contain type names
dotnet_diagnostic.CA1720.severity = none

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none

# CA1724: Type Names Should Not Match Namespaces
dotnet_diagnostic.CA1724.severity = none

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = none

# CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = none

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = none

# CA1802: Use Literals Where Appropriate
dotnet_diagnostic.CA1802.severity = none

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = error

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = error

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = error

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = none

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = none

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = error

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = none

# CA1816: Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1816.severity = none

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = error

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = none

# CA1821: Remove empty finalizers
dotnet_diagnostic.CA1821.severity = error

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = none

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = none

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = none

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = error

# CA1826: Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1826.severity = none

# CA1827: Do not use Count/LongCount when Any can be used
dotnet_diagnostic.CA1827.severity = error

# CA1828: Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.CA1828.severity = error

# CA1829: Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.CA1829.severity = error

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = error

# CA1831: Use AsSpan instead of Range-based indexers for string when appropriate
dotnet_diagnostic.CA1831.severity = error

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.CA1832.severity = error

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.CA1833.severity = error

# CA1834: Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.CA1834.severity = error

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = none

# CA1836: Prefer IsEmpty over Count when available
dotnet_diagnostic.CA1836.severity = error

# CA1837: Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
dotnet_diagnostic.CA1837.severity = none

# CA1838: Avoid StringBuilder parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = none

# CA1839: Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName
dotnet_diagnostic.CA1839.severity = none

# CA1840: Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId
dotnet_diagnostic.CA1840.severity = none

# CA1841: Prefer Dictionary Contains methods
dotnet_diagnostic.CA1841.severity = error

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = error

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = error

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = none

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = error

# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.CA1846.severity = error

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = error

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = none

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = none

# CA1850: Prefer static HashData method over ComputeHash
dotnet_diagnostic.CA1850.severity = none

# CA1851: Possible multiple enumerations of IEnumerable collection
dotnet_diagnostic.CA1851.severity = error

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = none

# CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = error

# CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = error

# CA1855: Use Span<T>.Clear() instead of Span<T>.Fill()
dotnet_diagnostic.CA1855.severity = error

# CA1856: Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.CA1856.severity = none

# CA1857: The parameter expects a constant for optimal performance
dotnet_diagnostic.CA1857.severity = none

# CA1858: Use StartsWith instead of IndexOf
dotnet_diagnostic.CA1858.severity = error

# CA1859: Use concrete types when possible for improved performance
dotnet_diagnostic.CA1859.severity = error

# CA1860: Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1860.severity = error

# CA1861: Avoid constant arrays as arguments
dotnet_diagnostic.CA1861.severity = error

# CA1862: Use the 'StringComparison' method overloads to perform case-insensitive string comparisons
dotnet_diagnostic.CA1862.severity = none

# CA1863: Use 'CompositeFormat'
dotnet_diagnostic.CA1863.severity = none

# CA1864: Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.CA1864.severity = error

# CA1865-CA1867: Use char overload
dotnet_diagnostic.CA1865.severity = error
dotnet_diagnostic.CA1866.severity = error
dotnet_diagnostic.CA1867.severity = none

# CA1868: Unnecessary call to 'Contains' for sets
dotnet_diagnostic.CA1868.severity = error

# CA1869: Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1869.severity = error

# CA1870: Use a cached 'SearchValues' instance
dotnet_diagnostic.CA1870.severity = none

# CA1871: Do not pass a nullable struct to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.CA1871.severity = error

# CA1872: Prefer 'Convert.ToHexString' and 'Convert.ToHexStringLower' over call chains based on 'BitConverter.ToString'
dotnet_diagnostic.CA1872.severity = none

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = none

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = none

# CA2007: Do not directly await a Task
dotnet_diagnostic.CA2007.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = error

# CA2011: Do not assign property within its setter
dotnet_diagnostic.CA2011.severity = error

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = none

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = error

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = none

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = none

# CA2016: Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.CA2016.severity = none

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = error

# CA2018: The count argument to Buffer.BlockCopy should specify the number of bytes to copy
dotnet_diagnostic.CA2018.severity = error

# CA2019: ThreadStatic fields should not use inline initialization
dotnet_diagnostic.CA2019.severity = error

# CA2020: Prevent behavioral change caused by built-in operators of IntPtr/UIntPtr
dotnet_diagnostic.CA2020.severity = none

# CA2021: Don't call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.CA2021.severity = error

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = none

# CA2101: Specify marshalling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = none

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = none

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = none

# CA2153: Avoid handling Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = none

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = error

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = none

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = none

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = none

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = none

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = none

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = none

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = none

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = none

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = error

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = none

# CA2219: Do not raise exceptions in exception clauses
dotnet_diagnostic.CA2219.severity = none

# CA2224: Override equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = none

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = none

# CA2231: Overload operator equals on overriding ValueType.Equals
dotnet_diagnostic.CA2231.severity = none

# CA2234: Pass System.Uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = none

# CA2237: Mark ISerializable types with SerializableAttribute
dotnet_diagnostic.CA2237.severity = none

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = none

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = none

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = none

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = none

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = none

# CA2246: Do not assign a symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = none

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum.
dotnet_diagnostic.CA2247.severity = none

# CA2248: Provide correct enum argument to Enum.HasFlag
dotnet_diagnostic.CA2248.severity = none

# CA2249: Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.CA2249.severity = error

# CA2250: Use ThrowIfCancellationRequested
dotnet_diagnostic.CA2250.severity = none

# CA2251: Use String.Equals over String.Compare
dotnet_diagnostic.CA2251.severity = none

# CA2252: Opt in to preview features
dotnet_diagnostic.CA2252.severity = none

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = error

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = warning

# CA2255: The ModuleInitializer attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = none

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = none

# CA2257: Members defined on an interface with 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = none

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = none

# CA2259: Ensure ThreadStatic is only used with static fields
dotnet_diagnostic.CA2259.severity = none

# CA2260: Implement generic math interfaces correctly
dotnet_diagnostic.CA2260.severity = none

# CA2261: Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
dotnet_diagnostic.CA2261.severity = none

# CA2262: Set MaxResponseHeadersLength properly
dotnet_diagnostic.CA2262.severity = none

# CA2263: Prefer generic overload when type is known
dotnet_diagnostic.CA2263.severity = none

# CA2264: Do not pass a non-nullable value to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.CA2264.severity = none

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = none

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = none

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = none

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = none

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = none

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = none

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = none

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = none

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = none

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = none

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = none

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = error

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = error

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = error

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = error

# CA2350: Ensure DataTable.ReadXml()'s input is trusted
dotnet_diagnostic.CA2350.severity = none

# CA2351: Ensure DataSet.ReadXml()'s input is trusted
dotnet_diagnostic.CA2351.severity = none

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = none

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = none

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack
dotnet_diagnostic.CA2354.severity = none

# CA2355: Unsafe DataSet or DataTable in deserialized object graph
dotnet_diagnostic.CA2355.severity = none

# CA2356: Unsafe DataSet or DataTable in web deserialized object graph
dotnet_diagnostic.CA2356.severity = none

# CA2361: Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = none

# CA2362: Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = none

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = none

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = none

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = none

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = none

# CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = none

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = none

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = none

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = none

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = none

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = none

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = none

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = none

# CA3061: Do not add schema by URL
dotnet_diagnostic.CA3061.severity = none

# CA3075: Insecure DTD Processing
dotnet_diagnostic.CA3075.severity = none

# CA3076: Insecure XSLT Script Execution
dotnet_diagnostic.CA3076.severity = none

# CA3077: Insecure Processing in API Design, XML Document and XML Text Reader
dotnet_diagnostic.CA3077.severity = none

# CA3147: Mark verb handlers with ValidateAntiForgeryToken
dotnet_diagnostic.CA3147.severity = none

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = none

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = none

# CA5358: Do Not Use Unsafe Cipher Modes
dotnet_diagnostic.CA5358.severity = none

# CA5359: Do not disable certificate validation
dotnet_diagnostic.CA5359.severity = none

# CA5360: Do not call dangerous methods in deserialization
dotnet_diagnostic.CA5360.severity = none

# CA5361: Do not disable Schannel use of strong crypto
dotnet_diagnostic.CA5361.severity = none

# CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = none

# CA5363: Do not disable request validation
dotnet_diagnostic.CA5363.severity = none

# CA5364: Do not use deprecated security protocols
dotnet_diagnostic.CA5364.severity = none

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = none

# CA5366: Use XmlReader For DataSet Read XML
dotnet_diagnostic.CA5366.severity = none

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = none

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = none

# CA5369: Use XmlReader for Deserialize
dotnet_diagnostic.CA5369.severity = none

# CA5370: Use XmlReader for validating reader
dotnet_diagnostic.CA5370.severity = none

# CA5371: Use XmlReader for schema read
dotnet_diagnostic.CA5371.severity = none

# CA5372: Use XmlReader for XPathDocument
dotnet_diagnostic.CA5372.severity = none

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = none

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = none

# CA5375: Do not use account shared access signature
dotnet_diagnostic.CA5375.severity = none

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = none

# CA5377: Use container level access policy
dotnet_diagnostic.CA5377.severity = none

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = none

# CA5379: Do not use weak key derivation function algorithm
dotnet_diagnostic.CA5379.severity = none

# CA5380: Do not add certificates to root store
dotnet_diagnostic.CA5380.severity = none

# CA5381: Ensure certificates are not added to root store
dotnet_diagnostic.CA5381.severity = none

# CA5382: Use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5382.severity = none

# CA5383: Ensure use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5383.severity = none

# CA5384: Do not use digital signature algorithm (DSA)
dotnet_diagnostic.CA5384.severity = none

# CA5385: Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size
dotnet_diagnostic.CA5385.severity = none

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = none

# CA5387: Do not use weak key derivation function with insufficient iteration count
dotnet_diagnostic.CA5387.severity = none

# CA5388: Ensure sufficient iteration count when using weak key derivation function
dotnet_diagnostic.CA5388.severity = none

# CA5389: Do not add archive item's path to the target file system path
dotnet_diagnostic.CA5389.severity = none

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = none

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = none

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = none

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = none

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = none

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = none

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = none

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = none

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = none

# CA5399: Definitely disable HttpClient certificate revocation list check
dotnet_diagnostic.CA5399.severity = none

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = none

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = none

# CA5402: Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5402.severity = none

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = none

# CA5404: Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = none

# CA5405: Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = none


## SYSLIB ##

# SYSLIB1054: Use LibraryImportAttribute instead of DllImportAttribute to generate p/invoke marshalling code at compile time.
dotnet_diagnostic.SYSLIB1054.severity = none

## RCS ##

# Add blank line after embedded statement
dotnet_diagnostic.rcs0001.severity = error

# Add blank line after #region
dotnet_diagnostic.rcs0002.severity = error

# Add blank line after using directive list
dotnet_diagnostic.rcs0003.severity = error

# Add blank line before #endregion
dotnet_diagnostic.rcs0005.severity = error

# Add blank line before using directive list
dotnet_diagnostic.rcs0006.severity = error

# Add blank line between accessors
dotnet_diagnostic.rcs0007.severity = none

# Add blank line between closing brace and next statement
dotnet_diagnostic.rcs0008.severity = error

# Add blank line between declaration and documentation comment
dotnet_diagnostic.rcs0009.severity = error

# Add blank line between declarations
dotnet_diagnostic.rcs0010.severity = error

# Add/remove blank line between single-line accessors
dotnet_diagnostic.rcs0011.severity = error
roslynator_blank_line_between_single_line_accessors = false

# Add blank line between single-line declarations
dotnet_diagnostic.rcs0012.severity = none

# Add blank line between single-line declarations of different kind
dotnet_diagnostic.rcs0013.severity = none

# Add/remove blank line between using directives
dotnet_diagnostic.rcs0015.severity = error
roslynator_blank_line_between_using_directives = false

# Put attribute list on its own line
dotnet_diagnostic.rcs0016.severity = error

# Format accessor's braces on a single line or multiple lines
dotnet_diagnostic.rcs0020.severity = error
roslynator_accessor_braces_style = single_line_when_expression_is_on_single_line

# Format block's braces on a single line or multiple lines
dotnet_diagnostic.rcs0021.severity = error
# Options: roslynator_block_braces_style

# Format type declaration's braces
dotnet_diagnostic.rcs0023.severity = error

# Add new line after switch label
dotnet_diagnostic.rcs0024.severity = error

# Put full accessor on its own line
dotnet_diagnostic.rcs0025.severity = error

# Place new line after/before binary operator
dotnet_diagnostic.rcs0027.severity = error
roslynator_binary_operator_new_line = before

# Place new line after/before '?:' operator
dotnet_diagnostic.rcs0028.severity = error
roslynator_conditional_operator_new_line = before

# Put constructor initializer on its own line
dotnet_diagnostic.rcs0029.severity = none

# Add new line before embedded statement
dotnet_diagnostic.rcs0030.severity = error

# Put enum member on its own line
dotnet_diagnostic.rcs0031.severity = error

# Place new line after/before arrow token
dotnet_diagnostic.rcs0032.severity = error
roslynator_arrow_token_new_line = before

# Add new line before statement
dotnet_diagnostic.rcs0033.severity = error

# Put type parameter constraint on its own line
dotnet_diagnostic.rcs0034.severity = error

# Remove blank line between single-line declarations of same kind
dotnet_diagnostic.rcs0036.severity = none

# Remove new line before base list
dotnet_diagnostic.rcs0039.severity = error

# Remove new line between 'if' keyword and 'else' keyword
dotnet_diagnostic.rcs0041.severity = error

# Put auto-accessors on a single line
dotnet_diagnostic.rcs0042.severity = error

# Use carriage return + linefeed as new line
dotnet_diagnostic.rcs0044.severity = error

# Use linefeed as new line
dotnet_diagnostic.rcs0045.severity = none

# Use spaces instead of tab
dotnet_diagnostic.rcs0046.severity = none

# Put initializer on a single line
dotnet_diagnostic.rcs0048.severity = none

# Add blank line after top comment
dotnet_diagnostic.rcs0049.severity = error

# Add blank line before top declaration
dotnet_diagnostic.rcs0050.severity = error

# Add/remove new line before 'while' in 'do' statement
dotnet_diagnostic.rcs0051.severity = error
roslynator_new_line_before_while_in_do_statement = false

# Place new line after/before equals token
dotnet_diagnostic.rcs0052.severity = error
roslynator_equals_token_new_line = before

# Fix formatting of a list
dotnet_diagnostic.rcs0053.severity = error

# Fix formatting of a call chain
dotnet_diagnostic.rcs0054.severity = error

# Fix formatting of a binary expression chain
dotnet_diagnostic.rcs0055.severity = error

# A line is too long
dotnet_diagnostic.rcs0056.severity = error
roslynator_max_line_length = 120
roslynator_tab_length = 4

# Normalize whitespace at the beginning of a file
dotnet_diagnostic.rcs0057.severity = error

# Normalize whitespace at the end of a file
dotnet_diagnostic.rcs0058.severity = error
roslynator_new_line_at_end_of_file = false

# Place new line after/before null-conditional operator
dotnet_diagnostic.rcs0059.severity = error
roslynator_null_conditional_operator_new_line = before

# Add/remove line after file scoped namespace declaration
dotnet_diagnostic.rcs0060.severity = error
roslynator_blank_line_after_file_scoped_namespace_declaration = true

# Add/remove blank line between switch sections
# Replaces RCS0014 which became deprecated in 4.70
dotnet_diagnostic.rcs0061.severity = error
roslynator_blank_line_between_switch_sections = omit

# Add braces (when expression spans over multiple lines)
dotnet_diagnostic.rcs1001.severity = error

# Remove braces
dotnet_diagnostic.rcs1002.severity = error

# Add braces to if-else (when expression spans over multiple lines)
dotnet_diagnostic.rcs1003.severity = error

# Remove braces from if-else
dotnet_diagnostic.rcs1004.severity = error

# Simplify nested using statement
dotnet_diagnostic.rcs1005.severity = error

# Merge 'else' with nested 'if'
dotnet_diagnostic.rcs1006.severity = error

# Add braces
dotnet_diagnostic.rcs1007.severity = none

# Use explicit type instead of 'var' (when the type is not obvious)
dotnet_diagnostic.rcs1008.severity = error

# Use explicit type instead of 'var' (foreach variable)
dotnet_diagnostic.rcs1009.severity = error

# Use 'var' instead of explicit type (when the type is obvious)
dotnet_diagnostic.rcs1010.severity = none

# Use explicit type instead of 'var' (when the type is obvious)
dotnet_diagnostic.rcs1012.severity = error

# Use predefined type
dotnet_diagnostic.rcs1013.severity = error

# Use explicitly/implicitly typed array
dotnet_diagnostic.rcs1014.severity = none
# Options: roslynator_array_creation_type_style

# Use nameof operator
dotnet_diagnostic.rcs1015.severity = error

# Use block body or expression body
dotnet_diagnostic.rcs1016.severity = none
# Options: roslynator_body_style, roslynator_use_block_body_when_declaration_spans_over_multiple_lines, roslynator_use_block_body_when_expression_spans_over_multiple_lines

# Add/remove accessibility modifiers
dotnet_diagnostic.rcs1018.severity = none
# Options: roslynator_accessibility_modifiers

# Order modifiers
dotnet_diagnostic.rcs1019.severity = error

# Simplify Nullable<T> to T?
dotnet_diagnostic.rcs1020.severity = error

# Convert lambda expression body to expression body
dotnet_diagnostic.rcs1021.severity = error

# Remove unnecessary braces in switch section
dotnet_diagnostic.rcs1031.severity = error

# Remove redundant parentheses
dotnet_diagnostic.rcs1032.severity = error

# Remove redundant boolean literal
dotnet_diagnostic.rcs1033.severity = error

# Remove redundant 'sealed' modifier
dotnet_diagnostic.rcs1034.severity = error

# Remove unnecessary blank line
dotnet_diagnostic.rcs1036.severity = error

# Remove trailing white-space
dotnet_diagnostic.rcs1037.severity = error

# Remove argument list from attribute
dotnet_diagnostic.rcs1039.severity = error

# Remove enum default underlying type
dotnet_diagnostic.rcs1042.severity = error

# Remove 'partial' modifier from type with a single part
dotnet_diagnostic.rcs1043.severity = error

# Remove original exception from throw statement
dotnet_diagnostic.rcs1044.severity = error

# Asynchronous method name should end with 'Async'
dotnet_diagnostic.rcs1046.severity = none

# Non-asynchronous method name should not end with 'Async'
dotnet_diagnostic.rcs1047.severity = error

# Use lambda expression instead of anonymous method
dotnet_diagnostic.rcs1048.severity = error

# Simplify boolean comparison
dotnet_diagnostic.rcs1049.severity = error

# Include/omit parentheses when creating new object
dotnet_diagnostic.rcs1050.severity = none
# Options: roslynator_object_creation_parentheses_style

# Add/remove parentheses from condition in conditional operator
dotnet_diagnostic.rcs1051.severity = error
roslynator_conditional_operator_condition_parentheses_style = omit_when_condition_is_single_token

# Declare each attribute separately
dotnet_diagnostic.rcs1052.severity = error

# Unnecessary semicolon at the end of declaration
dotnet_diagnostic.rcs1055.severity = error

# Avoid usage of using alias directive
dotnet_diagnostic.rcs1056.severity = error

# Use compound assignment
dotnet_diagnostic.rcs1058.severity = error

# Avoid locking on publicly accessible instance
dotnet_diagnostic.rcs1059.severity = warning

# Declare each type in separate file
dotnet_diagnostic.rcs1060.severity = none

# Merge 'if' with nested 'if'
dotnet_diagnostic.rcs1061.severity = error

# Simplify logical negation
dotnet_diagnostic.rcs1068.severity = error

# Remove unnecessary case label
dotnet_diagnostic.rcs1069.severity = error

# Remove redundant default switch section
dotnet_diagnostic.rcs1070.severity = error

# Remove redundant base constructor call
dotnet_diagnostic.rcs1071.severity = error

# Convert 'if' to 'return' statement
dotnet_diagnostic.rcs1073.severity = error

# Remove redundant constructor
dotnet_diagnostic.rcs1074.severity = none

# Avoid empty catch clause that catches System.Exception
dotnet_diagnostic.rcs1075.severity = error

# Optimize LINQ method call
dotnet_diagnostic.rcs1077.severity = error

# Use string.Empty or 'string.Empty'
dotnet_diagnostic.rcs1078.severity = error
roslynator_empty_string_style = field

# Throwing of new NotImplementedException
dotnet_diagnostic.rcs1079.severity = none

# Use 'Count/Length' property instead of 'Any' method
dotnet_diagnostic.rcs1080.severity = none

# Split variable declaration
dotnet_diagnostic.rcs1081.severity = error

# Use coalesce expression instead of conditional expression
dotnet_diagnostic.rcs1084.severity = error

# Use auto-implemented property
dotnet_diagnostic.rcs1085.severity = error

# Use --/++ operator instead of assignment
dotnet_diagnostic.rcs1089.severity = none

# Add/remove 'ConfigureAwait(false)' call
dotnet_diagnostic.rcs1090.severity = error
roslynator_configure_await = false

# File contains no code
dotnet_diagnostic.rcs1093.severity = error

# Declare using directive on top level
dotnet_diagnostic.rcs1094.severity = error

# Use 'HasFlag' method or bitwise operator
dotnet_diagnostic.rcs1096.severity = error
roslynator_enum_has_flag_style = method

# Remove redundant 'ToString' call
dotnet_diagnostic.rcs1097.severity = error

# Constant values should be placed on right side of comparisons
dotnet_diagnostic.rcs1098.severity = error

# Default label should be the last label in a switch section
dotnet_diagnostic.rcs1099.severity = error

# Make class static
dotnet_diagnostic.rcs1102.severity = error

# Convert 'if' to assignment
dotnet_diagnostic.rcs1103.severity = error

# Simplify conditional expression
dotnet_diagnostic.rcs1104.severity = error

# Unnecessary interpolation
dotnet_diagnostic.rcs1105.severity = error

# Remove redundant 'ToCharArray' call
dotnet_diagnostic.rcs1107.severity = error

# Add 'static' modifier to all partial class declarations
dotnet_diagnostic.rcs1108.severity = error

# Declare type inside namespace
dotnet_diagnostic.rcs1110.severity = error

# Add braces to switch section with multiple statements
dotnet_diagnostic.rcs1111.severity = none

# Combine 'Enumerable.Where' method chain
dotnet_diagnostic.rcs1112.severity = error

# Use 'string.IsNullOrEmpty' method
dotnet_diagnostic.rcs1113.severity = error

# Remove redundant delegate creation
dotnet_diagnostic.rcs1114.severity = error

# Mark local variable as const
dotnet_diagnostic.rcs1118.severity = error

# Add parentheses when necessary
dotnet_diagnostic.rcs1123.severity = error

# Inline local variable
dotnet_diagnostic.rcs1124.severity = error

# Add braces to if-else
dotnet_diagnostic.rcs1126.severity = none

# Use coalesce expression
dotnet_diagnostic.rcs1128.severity = error

# Remove redundant field initialization
dotnet_diagnostic.rcs1129.severity = none

# Bitwise operation on enum without Flags attribute
dotnet_diagnostic.rcs1130.severity = error

# Remove redundant overriding member
dotnet_diagnostic.rcs1132.severity = error

# Remove redundant Dispose/Close call
dotnet_diagnostic.rcs1133.severity = error

# Remove redundant statement
dotnet_diagnostic.rcs1134.severity = error

# Declare enum member with zero value (when enum has FlagsAttribute)
dotnet_diagnostic.rcs1135.severity = error

# Merge switch sections with equivalent content
dotnet_diagnostic.rcs1136.severity = error

# Add summary to documentation comment
dotnet_diagnostic.rcs1138.severity = error

# Add summary element to documentation comment
dotnet_diagnostic.rcs1139.severity = error

# Add exception to documentation comment
dotnet_diagnostic.rcs1140.severity = none

# Add 'param' element to documentation comment
dotnet_diagnostic.rcs1141.severity = error

# Add 'typeparam' element to documentation comment
dotnet_diagnostic.rcs1142.severity = error

# Simplify coalesce expression
dotnet_diagnostic.rcs1143.severity = error

# Remove redundant 'as' operator
dotnet_diagnostic.rcs1145.severity = error

# Use conditional access
dotnet_diagnostic.rcs1146.severity = error

# Remove redundant cast
dotnet_diagnostic.rcs1151.severity = error

# Sort enum members
dotnet_diagnostic.rcs1154.severity = error

# Use StringComparison when comparing strings
dotnet_diagnostic.rcs1155.severity = none

# Use string.Length instead of comparison with empty string
dotnet_diagnostic.rcs1156.severity = error

# Composite enum value contains undefined flag
dotnet_diagnostic.rcs1157.severity = error

# Static member in generic type should use a type parameter
dotnet_diagnostic.rcs1158.severity = none

# Use EventHandler<T>
dotnet_diagnostic.rcs1159.severity = none

# Abstract type should not have public constructors
dotnet_diagnostic.rcs1160.severity = error

# Enum should declare explicit values
dotnet_diagnostic.rcs1161.severity = error

# Avoid chain of assignments
dotnet_diagnostic.rcs1162.severity = error

# Unused parameter
dotnet_diagnostic.rcs1163.severity = error

# Unused type parameter
dotnet_diagnostic.rcs1164.severity = error

# Unconstrained type parameter checked for null
dotnet_diagnostic.rcs1165.severity = none

# Value type object is never equal to null
dotnet_diagnostic.rcs1166.severity = error

# Parameter name differs from base name
dotnet_diagnostic.rcs1168.severity = error

# Make field read-only
dotnet_diagnostic.rcs1169.severity = error
roslynator_unity_code_analysis.enabled = false

# Use read-only auto-implemented property
dotnet_diagnostic.rcs1170.severity = error

# Simplify lazy initialization
dotnet_diagnostic.rcs1171.severity = error

# Use 'is' operator instead of 'as' operator
dotnet_diagnostic.rcs1172.severity = error

# Use coalesce expression instead of 'if'
dotnet_diagnostic.rcs1173.severity = error

# Remove redundant async/await
dotnet_diagnostic.rcs1174.severity = error

# Unused 'this' parameter
dotnet_diagnostic.rcs1175.severity = error

# Use 'var' instead of explicit type (when the type is not obvious)
dotnet_diagnostic.rcs1176.severity = none

# Use 'var' instead of explicit type (in foreach)
dotnet_diagnostic.rcs1177.severity = none

# Unnecessary assignment
dotnet_diagnostic.rcs1179.severity = error

# Inline lazy initialization
dotnet_diagnostic.rcs1180.severity = error

# Convert comment to documentation comment
dotnet_diagnostic.rcs1181.severity = none

# Remove redundant base interface
dotnet_diagnostic.rcs1182.severity = error

# Use Regex instance instead of static method
dotnet_diagnostic.rcs1186.severity = error

# Use constant instead of field
dotnet_diagnostic.rcs1187.severity = error

# Remove redundant auto-property initialization
dotnet_diagnostic.rcs1188.severity = error

# Add or remove region name
dotnet_diagnostic.rcs1189.severity = error

# Join string expressions
dotnet_diagnostic.rcs1190.severity = error

# Declare enum value as combination of names
dotnet_diagnostic.rcs1191.severity = error

# Unnecessary usage of verbatim string literal
dotnet_diagnostic.rcs1192.severity = error

# Overriding member should not change 'params' modifier
dotnet_diagnostic.rcs1193.severity = error

# Implement exception constructors
dotnet_diagnostic.rcs1194.severity = error

# Use ^ operator
dotnet_diagnostic.rcs1195.severity = error

# Call extension method as instance method
dotnet_diagnostic.rcs1196.severity = error

# Optimize StringBuilder.Append/AppendLine call
dotnet_diagnostic.rcs1197.severity = none

# Avoid unnecessary boxing of value type
dotnet_diagnostic.rcs1198.severity = error

# Unnecessary null check
dotnet_diagnostic.rcs1199.severity = error

# Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'
dotnet_diagnostic.rcs1200.severity = error

# Use method chaining
dotnet_diagnostic.rcs1201.severity = error

# Avoid NullReferenceException
dotnet_diagnostic.rcs1202.severity = error

# Use AttributeUsageAttribute
dotnet_diagnostic.rcs1203.severity = warning

# Use EventArgs.Empty
dotnet_diagnostic.rcs1204.severity = error

# Order named arguments according to the order of parameters
dotnet_diagnostic.rcs1205.severity = error

# Use conditional access instead of conditional expression
dotnet_diagnostic.rcs1206.severity = error

# Use anonymous function or method group
dotnet_diagnostic.rcs1207.severity = error
roslynator_use_anonymous_function_or_method_group = method_group

# Reduce 'if' nesting
dotnet_diagnostic.rcs1208.severity = error

# Order type parameter constraints
dotnet_diagnostic.rcs1209.severity = error

# Return completed task instead of returning null
dotnet_diagnostic.rcs1210.severity = error

# Remove unnecessary 'else'
dotnet_diagnostic.rcs1211.severity = error

# Remove redundant assignment
dotnet_diagnostic.rcs1212.severity = error

# Remove unused member declaration
dotnet_diagnostic.rcs1213.severity = none
# Options: roslynator_unity_code_analysis.enabled

# Unnecessary interpolated string
dotnet_diagnostic.rcs1214.severity = error

# Expression is always equal to true/false
dotnet_diagnostic.rcs1215.severity = error

# Unnecessary unsafe context
dotnet_diagnostic.rcs1216.severity = error

# Convert interpolated string to concatenation
dotnet_diagnostic.rcs1217.severity = none

# Simplify code branching
dotnet_diagnostic.rcs1218.severity = error

# Use pattern matching instead of combination of 'is' operator and cast operator
dotnet_diagnostic.rcs1220.severity = error

# Use pattern matching instead of combination of 'as' operator and null check
dotnet_diagnostic.rcs1221.severity = error

# Merge preprocessor directives
dotnet_diagnostic.rcs1222.severity = error

# Mark publicly visible type with DebuggerDisplay attribute
dotnet_diagnostic.rcs1223.severity = none

# Make method an extension method
dotnet_diagnostic.rcs1224.severity = none

# Make class sealed
dotnet_diagnostic.rcs1225.severity = none

# Add paragraph to documentation comment
dotnet_diagnostic.rcs1226.severity = none

# Validate arguments correctly
dotnet_diagnostic.rcs1227.severity = error

# Unused element in documentation comment
# No flags empty params but another rule requests params to be present.
dotnet_diagnostic.rcs1228.severity = none

# Use async/await when necessary
dotnet_diagnostic.rcs1229.severity = error

# Unnecessary explicit use of enumerator
dotnet_diagnostic.rcs1230.severity = error

# Make parameter ref read-only
dotnet_diagnostic.rcs1231.severity = none

# Order elements in documentation comment
dotnet_diagnostic.rcs1232.severity = error

# Use short-circuiting operator
dotnet_diagnostic.rcs1233.severity = error

# Duplicate enum value
dotnet_diagnostic.rcs1234.severity = error

# Optimize method call
dotnet_diagnostic.rcs1235.severity = error

# Use exception filter
dotnet_diagnostic.rcs1236.severity = none

# Avoid nested ?: operators
dotnet_diagnostic.rcs1238.severity = none

# Use 'for' statement instead of 'while' statement
dotnet_diagnostic.rcs1239.severity = error

# Operator is unnecessary
dotnet_diagnostic.rcs1240.severity = error

# Implement non-generic counterpart
dotnet_diagnostic.rcs1241.severity = error

# Do not pass non-read-only struct by read-only reference
dotnet_diagnostic.rcs1242.severity = none

# Duplicate word in a comment
dotnet_diagnostic.rcs1243.severity = error

# Simplify 'default' expression
dotnet_diagnostic.rcs1244.severity = error

# Use element access
dotnet_diagnostic.rcs1246.severity = error

# Fix documentation comment tag
dotnet_diagnostic.rcs1247.severity = error

# Normalize null check
dotnet_diagnostic.rcs1248.severity = error
roslynator_null_check_style = pattern_matching

# Unnecessary null-forgiving operator
dotnet_diagnostic.rcs1249.severity = error

# Use implicit/explicit object creation
dotnet_diagnostic.rcs1250.severity = error
roslynator_object_creation_type_style = implicit
roslynator_use_var_instead_of_implicit_object_creation = false

# Remove unnecessary braces from record declaration
dotnet_diagnostic.rcs1251.severity = error

# Normalize usage of infinite loop
dotnet_diagnostic.rcs1252.severity = error
roslynator_infinite_loop_style = while

# Format documentation comment summary
dotnet_diagnostic.rcs1253.severity = none
# Options: roslynator_doc_comment_summary_style

# Normalize format of enum flag value
dotnet_diagnostic.rcs1254.severity = error
roslynator_enum_flag_value_style = decimal_number

# Simplify argument null check
dotnet_diagnostic.rcs1255.severity = error

# Invalid argument null check
dotnet_diagnostic.rcs1256.severity = error

# Use enum field explicitly
dotnet_diagnostic.rcs1257.severity = error

# Unnecessary enum flag
dotnet_diagnostic.rcs1258.severity = error

# Remove empty syntax
dotnet_diagnostic.rcs1259.severity = error

# Add/remove trailing comma
dotnet_diagnostic.rcs1260.severity = error
roslynator_trailing_comma_style = omit_when_single_line

# Dispose resource asynchronously
dotnet_diagnostic.rcs1261.severity = error

# Unnecessary raw string literal
dotnet_diagnostic.rcs1262.severity = error

# Invalid reference in a documentation comment
dotnet_diagnostic.rcs1263.severity = error

# Use pattern matching
dotnet_diagnostic.rcs9001.severity = error

# Use property SyntaxNode.SpanStart
dotnet_diagnostic.rcs9002.severity = error

# Unnecessary conditional access
dotnet_diagnostic.rcs9003.severity = error

# Call 'Any' instead of accessing 'Count'
dotnet_diagnostic.rcs9004.severity = error

# Unnecessary null check
dotnet_diagnostic.rcs9005.severity = error

# Use element access
dotnet_diagnostic.rcs9006.severity = error

# Use return value
dotnet_diagnostic.rcs9007.severity = none

# Call 'Last' instead of using []
dotnet_diagnostic.rcs9008.severity = error

# Unknown language name
dotnet_diagnostic.rcs9009.severity = none

# Specify ExportCodeRefactoringProviderAttribute.Name
dotnet_diagnostic.rcs9010.severity = none

# Specify ExportCodeFixProviderAttribute.Name
dotnet_diagnostic.rcs9011.severity = none


# Refactorings

roslynator_refactoring.add_all_properties_to_initializer.enabled = true
roslynator_refactoring.add_argument_name.enabled = true
roslynator_refactoring.add_braces.enabled = true
roslynator_refactoring.add_braces_to_if_else.enabled = true
roslynator_refactoring.add_braces_to_switch_section.enabled = true
roslynator_refactoring.add_braces_to_switch_sections.enabled = true
roslynator_refactoring.add_default_value_to_parameter.enabled = true
roslynator_refactoring.add_empty_line_between_declarations.enabled = true
roslynator_refactoring.add_exception_element_to_documentation_comment.enabled = true
roslynator_refactoring.add_generic_parameter_to_declaration.enabled = true
roslynator_refactoring.add_member_to_interface.enabled = true
roslynator_refactoring.add_missing_cases_to_switch.enabled = true
roslynator_refactoring.add_parameter_to_interface_member.enabled = true
roslynator_refactoring.add_tag_to_documentation_comment.enabled = true
roslynator_refactoring.add_using_directive.enabled = true
roslynator_refactoring.add_using_static_directive.enabled = true
roslynator_refactoring.call_extension_method_as_instance_method.enabled = true
roslynator_refactoring.call_indexof_instead_of_contains.enabled = false
roslynator_refactoring.change_accessibility.enabled = true
roslynator_refactoring.change_method_return_type_to_void.enabled = true
roslynator_refactoring.change_type_according_to_expression.enabled = true
roslynator_refactoring.check_expression_for_null.enabled = true
roslynator_refactoring.check_parameter_for_null.enabled = true
roslynator_refactoring.comment_out_member_declaration.enabled = true
roslynator_refactoring.comment_out_statement.enabled = true
roslynator_refactoring.convert_auto_property_to_full_property.enabled = true
roslynator_refactoring.convert_auto_property_to_full_property_without_backing_field.enabled = true
roslynator_refactoring.convert_block_body_to_expression_body.enabled = true
roslynator_refactoring.convert_comment_to_documentation_comment.enabled = true
roslynator_refactoring.convert_conditional_expression_to_if_else.enabled = true
roslynator_refactoring.convert_do_to_while.enabled = true
roslynator_refactoring.convert_expression_body_to_block_body.enabled = true
roslynator_refactoring.convert_for_to_foreach.enabled = true
roslynator_refactoring.convert_for_to_while.enabled = true
roslynator_refactoring.convert_foreach_to_for.enabled = true
roslynator_refactoring.convert_foreach_to_for_and_reverse_loop.enabled = false
roslynator_refactoring.convert_hasflag_call_to_bitwise_operation.enabled = true
roslynator_refactoring.convert_hexadecimal_literal_to_decimal_literal.enabled = true
roslynator_refactoring.convert_if_to_conditional_expression.enabled = true
roslynator_refactoring.convert_if_to_switch.enabled = true
roslynator_refactoring.convert_interpolated_string_to_concatenation.enabled = true
roslynator_refactoring.convert_interpolated_string_to_string_format.enabled = true
roslynator_refactoring.convert_interpolated_string_to_string_literal.enabled = true
roslynator_refactoring.convert_lambda_block_body_to_expression_body.enabled = true
roslynator_refactoring.convert_lambda_expression_body_to_block_body.enabled = true
roslynator_refactoring.convert_method_group_to_lambda.enabled = true
roslynator_refactoring.convert_regular_string_literal_to_verbatim_string_literal.enabled = true
roslynator_refactoring.convert_return_statement_to_if.enabled = true
roslynator_refactoring.convert_statements_to_if_else.enabled = true
roslynator_refactoring.convert_string_format_to_interpolated_string.enabled = true
roslynator_refactoring.convert_switch_expression_to_switch_statement.enabled = true
roslynator_refactoring.convert_switch_to_if.enabled = true
roslynator_refactoring.convert_verbatim_string_literal_to_regular_string_literal.enabled = true
roslynator_refactoring.convert_verbatim_string_literal_to_regular_string_literals.enabled = true
roslynator_refactoring.convert_while_to_do.enabled = true
roslynator_refactoring.convert_while_to_for.enabled = true
roslynator_refactoring.copy_argument.enabled = true
roslynator_refactoring.copy_documentation_comment_from_base_member.enabled = true
roslynator_refactoring.copy_member_declaration.enabled = true
roslynator_refactoring.copy_parameter.enabled = true
roslynator_refactoring.copy_statement.enabled = true
roslynator_refactoring.copy_switch_section.enabled = true
roslynator_refactoring.deconstruct_foreach_variable.enabled = true
roslynator_refactoring.expand_coalesce_expression.enabled = true
roslynator_refactoring.expand_compound_assignment.enabled = true
roslynator_refactoring.expand_event_declaration.enabled = true
roslynator_refactoring.expand_initializer.enabled = false
roslynator_refactoring.expand_positional_constructor.enabled = true
roslynator_refactoring.extract_event_handler_method.enabled = true
roslynator_refactoring.extract_expression_from_condition.enabled = true
roslynator_refactoring.extract_type_declaration_to_new_file.enabled = true
roslynator_refactoring.generate_base_constructors.enabled = true
roslynator_refactoring.generate_combined_enum_member.enabled = true
roslynator_refactoring.generate_enum_member.enabled = true
roslynator_refactoring.generate_enum_values.enabled = true
roslynator_refactoring.generate_event_invoking_method.enabled = true
roslynator_refactoring.generate_property_for_debuggerdisplay_attribute.enabled = true
roslynator_refactoring.implement_custom_enumerator.enabled = true
roslynator_refactoring.implement_iequatable.enabled = true
roslynator_refactoring.initialize_field_from_constructor.enabled = true
roslynator_refactoring.initialize_local_variable_with_default_value.enabled = true
roslynator_refactoring.inline_alias_expression.enabled = true
roslynator_refactoring.inline_constant.enabled = true
roslynator_refactoring.inline_constant_value.enabled = true
roslynator_refactoring.inline_method.enabled = true
roslynator_refactoring.inline_property.enabled = true
roslynator_refactoring.inline_using_static.enabled = true
roslynator_refactoring.insert_string_interpolation.enabled = true
roslynator_refactoring.introduce_and_initialize_field.enabled = true
roslynator_refactoring.introduce_and_initialize_property.enabled = true
roslynator_refactoring.introduce_constructor.enabled = false
roslynator_refactoring.introduce_field_to_lock_on.enabled = true
roslynator_refactoring.introduce_local_variable.enabled = true
roslynator_refactoring.invert_binary_expression.enabled = true
roslynator_refactoring.invert_boolean_literal.enabled = true
roslynator_refactoring.invert_conditional_expression.enabled = true
roslynator_refactoring.invert_if.enabled = true
roslynator_refactoring.invert_if_else.enabled = true
roslynator_refactoring.invert_is_expression.enabled = true
roslynator_refactoring.invert_linq_method_call.enabled = true
roslynator_refactoring.invert_operator.enabled = true
roslynator_refactoring.invert_prefix_or_postfix_unary_expression.enabled = true
roslynator_refactoring.join_string_expressions.enabled = true
roslynator_refactoring.make_member_abstract.enabled = true
roslynator_refactoring.make_member_virtual.enabled = true
roslynator_refactoring.merge_attributes.enabled = true
roslynator_refactoring.merge_if_statements.enabled = true
roslynator_refactoring.merge_if_with_parent_if.enabled = true
roslynator_refactoring.merge_local_declarations.enabled = true
roslynator_refactoring.merge_switch_sections.enabled = true
roslynator_refactoring.move_unsafe_context_to_containing_declaration.enabled = true
roslynator_refactoring.notify_when_property_changes.enabled = true
roslynator_refactoring.parenthesize_expression.enabled = true
roslynator_refactoring.promote_local_variable_to_parameter.enabled = true
roslynator_refactoring.remove_all_comments.enabled = true
roslynator_refactoring.remove_all_comments_except_documentation_comments.enabled = true
roslynator_refactoring.remove_all_documentation_comments.enabled = false
roslynator_refactoring.remove_all_member_declarations.enabled = true
roslynator_refactoring.remove_all_preprocessor_directives.enabled = true
roslynator_refactoring.remove_all_region_directives.enabled = true
roslynator_refactoring.remove_all_statements.enabled = true
roslynator_refactoring.remove_all_switch_sections.enabled = true
roslynator_refactoring.remove_argument_name.enabled = true
roslynator_refactoring.remove_async_await.enabled = true
roslynator_refactoring.remove_braces.enabled = true
roslynator_refactoring.remove_braces_from_if_else.enabled = true
roslynator_refactoring.remove_braces_from_switch_section.enabled = true
roslynator_refactoring.remove_braces_from_switch_sections.enabled = true
roslynator_refactoring.remove_comment.enabled = true
roslynator_refactoring.remove_condition_from_last_else.enabled = true
roslynator_refactoring.remove_containing_statement.enabled = true
roslynator_refactoring.remove_empty_lines.enabled = true
roslynator_refactoring.remove_enum_member_value.enabled = true
roslynator_refactoring.remove_instantiation_of_local_variable.enabled = true
roslynator_refactoring.remove_interpolation.enabled = true
roslynator_refactoring.remove_member_declaration.enabled = true
roslynator_refactoring.remove_member_declarations_above_or_below.enabled = true
roslynator_refactoring.remove_parentheses.enabled = true
roslynator_refactoring.remove_preprocessor_directive.enabled = true
roslynator_refactoring.remove_property_initializer.enabled = true
roslynator_refactoring.remove_region.enabled = true
roslynator_refactoring.remove_statement.enabled = true
roslynator_refactoring.remove_unnecessary_assignment.enabled = true
roslynator_refactoring.rename_identifier_according_to_type_name.enabled = true
roslynator_refactoring.rename_method_according_to_type_name.enabled = true
roslynator_refactoring.rename_parameter_according_to_type_name.enabled = true
roslynator_refactoring.rename_property_according_to_type_name.enabled = true
roslynator_refactoring.replace_as_expression_with_explicit_cast.enabled = true
roslynator_refactoring.replace_conditional_expression_with_true_or_false_branch.enabled = true
roslynator_refactoring.replace_equality_operator_with_string_equals.enabled = true
roslynator_refactoring.replace_equality_operator_with_string_isnullorempty.enabled = true
roslynator_refactoring.replace_equality_operator_with_string_isnullorwhitespace.enabled = true
roslynator_refactoring.replace_explicit_cast_with_as_expression.enabled = true
roslynator_refactoring.replace_interpolated_string_with_interpolation_expression.enabled = true
roslynator_refactoring.replace_method_with_property.enabled = false
roslynator_refactoring.replace_null_literal_with_default_expression.enabled = true
roslynator_refactoring.replace_prefix_operator_with_postfix_operator.enabled = true
roslynator_refactoring.replace_property_with_method.enabled = true
roslynator_refactoring.reverse_for_statement.enabled = true
roslynator_refactoring.simplify_if.enabled = true
roslynator_refactoring.sort_case_labels.enabled = true
roslynator_refactoring.sort_member_declarations.enabled = true
roslynator_refactoring.split_attributes.enabled = true
roslynator_refactoring.split_if.enabled = true
roslynator_refactoring.split_if_else.enabled = true
roslynator_refactoring.split_local_declaration_and_assignment.enabled = true
roslynator_refactoring.split_switch_labels.enabled = true
roslynator_refactoring.split_variable_declaration.enabled = true
roslynator_refactoring.swap_binary_operands.enabled = true
roslynator_refactoring.swap_member_declarations.enabled = true
roslynator_refactoring.sync_property_name_and_backing_field_name.enabled = true
roslynator_refactoring.uncomment_multiline_comment.enabled = true
roslynator_refactoring.uncomment_singleline_comment.enabled = true
roslynator_refactoring.use_coalesce_expression_instead_of_if.enabled = true
roslynator_refactoring.use_constant_instead_of_readonly_field.enabled = true
roslynator_refactoring.use_element_access_instead_of_linq_method.enabled = true
roslynator_refactoring.use_enumerator_explicitly.enabled = true
roslynator_refactoring.use_explicit_type.enabled = true
roslynator_refactoring.use_implicit_type.enabled = true
roslynator_refactoring.use_index_initializer.enabled = true
roslynator_refactoring.use_lambda_instead_of_anonymous_method.enabled = true
roslynator_refactoring.use_list_instead_of_yield.enabled = true
roslynator_refactoring.use_object_initializer.enabled = true
roslynator_refactoring.use_readonly_field_instead_of_constant.enabled = true
roslynator_refactoring.use_string_empty_instead_of_empty_string_literal.enabled = true
roslynator_refactoring.use_stringbuilder_instead_of_concatenation.enabled = true
roslynator_refactoring.wrap_arguments.enabled = true
roslynator_refactoring.wrap_binary_expression.enabled = true
roslynator_refactoring.wrap_call_chain.enabled = true
roslynator_refactoring.wrap_conditional_expression.enabled = true
roslynator_refactoring.wrap_constraint_clauses.enabled = true
roslynator_refactoring.wrap_initializer_expressions.enabled = true
roslynator_refactoring.wrap_lines_in_preprocessor_directive.enabled = true
roslynator_refactoring.wrap_lines_in_region.enabled = true
roslynator_refactoring.wrap_lines_in_try_catch.enabled = true
roslynator_refactoring.wrap_parameters.enabled = true
roslynator_refactoring.wrap_statements_in_condition.enabled = true
roslynator_refactoring.wrap_statements_in_using_statement.enabled = true

# Compiler diagnostic fixes

roslynator_compiler_diagnostic_fix.cs0019.enabled = true
roslynator_compiler_diagnostic_fix.cs0021.enabled = true
roslynator_compiler_diagnostic_fix.cs0023.enabled = true
roslynator_compiler_diagnostic_fix.cs0029.enabled = true
roslynator_compiler_diagnostic_fix.cs0030.enabled = true
roslynator_compiler_diagnostic_fix.cs0037.enabled = true
roslynator_compiler_diagnostic_fix.cs0069.enabled = true
roslynator_compiler_diagnostic_fix.cs0077.enabled = true
roslynator_compiler_diagnostic_fix.cs0080.enabled = true
roslynator_compiler_diagnostic_fix.cs0101.enabled = true
roslynator_compiler_diagnostic_fix.cs0102.enabled = true
roslynator_compiler_diagnostic_fix.cs0103.enabled = true
roslynator_compiler_diagnostic_fix.cs0106.enabled = true
roslynator_compiler_diagnostic_fix.cs0107.enabled = true
roslynator_compiler_diagnostic_fix.cs0108.enabled = true
roslynator_compiler_diagnostic_fix.cs0109.enabled = true
roslynator_compiler_diagnostic_fix.cs0112.enabled = true
roslynator_compiler_diagnostic_fix.cs0114.enabled = true
roslynator_compiler_diagnostic_fix.cs0115.enabled = true
roslynator_compiler_diagnostic_fix.cs0119.enabled = true
roslynator_compiler_diagnostic_fix.cs0120.enabled = true
roslynator_compiler_diagnostic_fix.cs0123.enabled = true
roslynator_compiler_diagnostic_fix.cs0126.enabled = true
roslynator_compiler_diagnostic_fix.cs0127.enabled = true
roslynator_compiler_diagnostic_fix.cs0128.enabled = true
roslynator_compiler_diagnostic_fix.cs0131.enabled = true
roslynator_compiler_diagnostic_fix.cs0132.enabled = true
roslynator_compiler_diagnostic_fix.cs0133.enabled = true
roslynator_compiler_diagnostic_fix.cs0136.enabled = true
roslynator_compiler_diagnostic_fix.cs0139.enabled = true
roslynator_compiler_diagnostic_fix.cs0152.enabled = true
roslynator_compiler_diagnostic_fix.cs0161.enabled = true
roslynator_compiler_diagnostic_fix.cs0162.enabled = true
roslynator_compiler_diagnostic_fix.cs0163.enabled = true
roslynator_compiler_diagnostic_fix.cs0164.enabled = true
roslynator_compiler_diagnostic_fix.cs0165.enabled = true
roslynator_compiler_diagnostic_fix.cs0168.enabled = true
roslynator_compiler_diagnostic_fix.cs0173.enabled = true
roslynator_compiler_diagnostic_fix.cs0177.enabled = true
roslynator_compiler_diagnostic_fix.cs0191.enabled = true
roslynator_compiler_diagnostic_fix.cs0192.enabled = true
roslynator_compiler_diagnostic_fix.cs0201.enabled = true
roslynator_compiler_diagnostic_fix.cs0214.enabled = true
roslynator_compiler_diagnostic_fix.cs0216.enabled = true
roslynator_compiler_diagnostic_fix.cs0219.enabled = true
roslynator_compiler_diagnostic_fix.cs0221.enabled = true
roslynator_compiler_diagnostic_fix.cs0225.enabled = true
roslynator_compiler_diagnostic_fix.cs0238.enabled = true
roslynator_compiler_diagnostic_fix.cs0246.enabled = true
roslynator_compiler_diagnostic_fix.cs0260.enabled = true
roslynator_compiler_diagnostic_fix.cs0262.enabled = true
roslynator_compiler_diagnostic_fix.cs0266.enabled = true
roslynator_compiler_diagnostic_fix.cs0267.enabled = true
roslynator_compiler_diagnostic_fix.cs0272.enabled = true
roslynator_compiler_diagnostic_fix.cs0275.enabled = true
roslynator_compiler_diagnostic_fix.cs0305.enabled = true
roslynator_compiler_diagnostic_fix.cs0401.enabled = true
roslynator_compiler_diagnostic_fix.cs0403.enabled = true
roslynator_compiler_diagnostic_fix.cs0405.enabled = true
roslynator_compiler_diagnostic_fix.cs0407.enabled = true
roslynator_compiler_diagnostic_fix.cs0409.enabled = true
roslynator_compiler_diagnostic_fix.cs0428.enabled = true
roslynator_compiler_diagnostic_fix.cs0441.enabled = true
roslynator_compiler_diagnostic_fix.cs0442.enabled = true
roslynator_compiler_diagnostic_fix.cs0449.enabled = true
roslynator_compiler_diagnostic_fix.cs0450.enabled = true
roslynator_compiler_diagnostic_fix.cs0451.enabled = true
roslynator_compiler_diagnostic_fix.cs0472.enabled = true
roslynator_compiler_diagnostic_fix.cs0500.enabled = true
roslynator_compiler_diagnostic_fix.cs0501.enabled = true
roslynator_compiler_diagnostic_fix.cs0507.enabled = true
roslynator_compiler_diagnostic_fix.cs0508.enabled = true
roslynator_compiler_diagnostic_fix.cs0513.enabled = true
roslynator_compiler_diagnostic_fix.cs0515.enabled = true
roslynator_compiler_diagnostic_fix.cs0524.enabled = true
roslynator_compiler_diagnostic_fix.cs0525.enabled = true
roslynator_compiler_diagnostic_fix.cs0527.enabled = true
roslynator_compiler_diagnostic_fix.cs0531.enabled = true
roslynator_compiler_diagnostic_fix.cs0539.enabled = true
roslynator_compiler_diagnostic_fix.cs0541.enabled = true
roslynator_compiler_diagnostic_fix.cs0549.enabled = true
roslynator_compiler_diagnostic_fix.cs0558.enabled = true
roslynator_compiler_diagnostic_fix.cs0567.enabled = true
roslynator_compiler_diagnostic_fix.cs0568.enabled = true
roslynator_compiler_diagnostic_fix.cs0573.enabled = true
roslynator_compiler_diagnostic_fix.cs0574.enabled = true
roslynator_compiler_diagnostic_fix.cs0575.enabled = true
roslynator_compiler_diagnostic_fix.cs0579.enabled = true
roslynator_compiler_diagnostic_fix.cs0592.enabled = true
roslynator_compiler_diagnostic_fix.cs0621.enabled = true
roslynator_compiler_diagnostic_fix.cs0628.enabled = true
roslynator_compiler_diagnostic_fix.cs0659.enabled = true
roslynator_compiler_diagnostic_fix.cs0660.enabled = true
roslynator_compiler_diagnostic_fix.cs0661.enabled = true
roslynator_compiler_diagnostic_fix.cs0678.enabled = true
roslynator_compiler_diagnostic_fix.cs0693.enabled = true
roslynator_compiler_diagnostic_fix.cs0708.enabled = true
roslynator_compiler_diagnostic_fix.cs0710.enabled = true
roslynator_compiler_diagnostic_fix.cs0713.enabled = true
roslynator_compiler_diagnostic_fix.cs0714.enabled = true
roslynator_compiler_diagnostic_fix.cs0718.enabled = true
roslynator_compiler_diagnostic_fix.cs0750.enabled = true
roslynator_compiler_diagnostic_fix.cs0751.enabled = true
roslynator_compiler_diagnostic_fix.cs0753.enabled = true
roslynator_compiler_diagnostic_fix.cs0756.enabled = true
roslynator_compiler_diagnostic_fix.cs0759.enabled = true
roslynator_compiler_diagnostic_fix.cs0766.enabled = true
roslynator_compiler_diagnostic_fix.cs0815.enabled = true
roslynator_compiler_diagnostic_fix.cs0819.enabled = true
roslynator_compiler_diagnostic_fix.cs0822.enabled = true
roslynator_compiler_diagnostic_fix.cs1002.enabled = true
roslynator_compiler_diagnostic_fix.cs1003.enabled = true
roslynator_compiler_diagnostic_fix.cs1004.enabled = true
roslynator_compiler_diagnostic_fix.cs1012.enabled = true
roslynator_compiler_diagnostic_fix.cs1023.enabled = true
roslynator_compiler_diagnostic_fix.cs1031.enabled = true
roslynator_compiler_diagnostic_fix.cs1057.enabled = true
roslynator_compiler_diagnostic_fix.cs1061.enabled = true
roslynator_compiler_diagnostic_fix.cs1100.enabled = true
roslynator_compiler_diagnostic_fix.cs1105.enabled = true
roslynator_compiler_diagnostic_fix.cs1106.enabled = true
roslynator_compiler_diagnostic_fix.cs1503.enabled = true
roslynator_compiler_diagnostic_fix.cs1522.enabled = true
roslynator_compiler_diagnostic_fix.cs1526.enabled = true
roslynator_compiler_diagnostic_fix.cs1527.enabled = true
roslynator_compiler_diagnostic_fix.cs1591.enabled = true
roslynator_compiler_diagnostic_fix.cs1597.enabled = true
roslynator_compiler_diagnostic_fix.cs1609.enabled = true
roslynator_compiler_diagnostic_fix.cs1615.enabled = true
roslynator_compiler_diagnostic_fix.cs1620.enabled = true
roslynator_compiler_diagnostic_fix.cs1621.enabled = true
roslynator_compiler_diagnostic_fix.cs1622.enabled = true
roslynator_compiler_diagnostic_fix.cs1623.enabled = true
roslynator_compiler_diagnostic_fix.cs1624.enabled = true
roslynator_compiler_diagnostic_fix.cs1643.enabled = true
roslynator_compiler_diagnostic_fix.cs1674.enabled = true
roslynator_compiler_diagnostic_fix.cs1689.enabled = true
roslynator_compiler_diagnostic_fix.cs1715.enabled = true
roslynator_compiler_diagnostic_fix.cs1717.enabled = true
roslynator_compiler_diagnostic_fix.cs1722.enabled = true
roslynator_compiler_diagnostic_fix.cs1737.enabled = true
roslynator_compiler_diagnostic_fix.cs1741.enabled = true
roslynator_compiler_diagnostic_fix.cs1743.enabled = true
roslynator_compiler_diagnostic_fix.cs1750.enabled = true
roslynator_compiler_diagnostic_fix.cs1751.enabled = true
roslynator_compiler_diagnostic_fix.cs1955.enabled = true
roslynator_compiler_diagnostic_fix.cs1983.enabled = true
roslynator_compiler_diagnostic_fix.cs1988.enabled = true
roslynator_compiler_diagnostic_fix.cs1994.enabled = true
roslynator_compiler_diagnostic_fix.cs1997.enabled = true
roslynator_compiler_diagnostic_fix.cs3000.enabled = true
roslynator_compiler_diagnostic_fix.cs3001.enabled = true
roslynator_compiler_diagnostic_fix.cs3002.enabled = true
roslynator_compiler_diagnostic_fix.cs3003.enabled = true
roslynator_compiler_diagnostic_fix.cs3005.enabled = true
roslynator_compiler_diagnostic_fix.cs3006.enabled = true
roslynator_compiler_diagnostic_fix.cs3007.enabled = true
roslynator_compiler_diagnostic_fix.cs3008.enabled = true
roslynator_compiler_diagnostic_fix.cs3009.enabled = true
roslynator_compiler_diagnostic_fix.cs3016.enabled = true
roslynator_compiler_diagnostic_fix.cs3024.enabled = true
roslynator_compiler_diagnostic_fix.cs3027.enabled = true
roslynator_compiler_diagnostic_fix.cs7036.enabled = true
roslynator_compiler_diagnostic_fix.cs8050.enabled = true
roslynator_compiler_diagnostic_fix.cs8070.enabled = true
roslynator_compiler_diagnostic_fix.cs8112.enabled = true
roslynator_compiler_diagnostic_fix.cs8139.enabled = true
roslynator_compiler_diagnostic_fix.cs8340.enabled = true
roslynator_compiler_diagnostic_fix.cs8403.enabled = true
roslynator_compiler_diagnostic_fix.cs8602.enabled = true
roslynator_compiler_diagnostic_fix.cs8604.enabled = false
roslynator_compiler_diagnostic_fix.cs8618.enabled = true
roslynator_compiler_diagnostic_fix.cs8625.enabled = true
roslynator_compiler_diagnostic_fix.cs8632.enabled = true

# .NET formatting options
dotnet_sort_system_directives_first = true
# C# formatting options
csharp_new_line_before_open_brace = anonymous_methods, control_blocks, events, local_functions, methods, properties, types
csharp_preserve_single_line_statements = true

# Naming rules

# PascalCase
dotnet_naming_rule.types_and_namespaces_should_be_PascalCase.severity = error
dotnet_naming_rule.types_and_namespaces_should_be_PascalCase.symbols = types_and_namespaces
dotnet_naming_rule.types_and_namespaces_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.public_constant_fields_should_be_PascalCase.severity = error
dotnet_naming_rule.public_constant_fields_should_be_PascalCase.symbols = public_constant_fields
dotnet_naming_rule.public_constant_fields_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.private_constant_fields_should_be_PascalCase.severity = error
dotnet_naming_rule.private_constant_fields_should_be_PascalCase.symbols = private_constant_fields
dotnet_naming_rule.private_constant_fields_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.enums_should_be_PascalCase.severity = error
dotnet_naming_rule.enums_should_be_PascalCase.symbols = enums
dotnet_naming_rule.enums_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.local_functions_should_be_PascalCase.severity = error
dotnet_naming_rule.local_functions_should_be_PascalCase.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.non_field_members_should_be_PascalCase.severity = error
dotnet_naming_rule.non_field_members_should_be_PascalCase.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.public_static_readonly_fields_should_be_PascalCase.severity = error
dotnet_naming_rule.public_static_readonly_fields_should_be_PascalCase.symbols = public_static_readonly_fields
dotnet_naming_rule.public_static_readonly_fields_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.methods_should_be_PascalCase.severity = error
dotnet_naming_rule.methods_should_be_PascalCase.symbols = methods
dotnet_naming_rule.methods_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.properties_should_be_PascalCase.severity = error
dotnet_naming_rule.properties_should_be_PascalCase.symbols = properties
dotnet_naming_rule.properties_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.events_should_be_PascalCase.severity = error
dotnet_naming_rule.events_should_be_PascalCase.symbols = events
dotnet_naming_rule.events_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.public_fields_should_be_PascalCase.severity = error
dotnet_naming_rule.public_fields_should_be_PascalCase.symbols = public_fields
dotnet_naming_rule.public_fields_should_be_PascalCase.style = PascalCase

dotnet_naming_rule.private_static_readonly_fields_should_be_PascalCase.severity = error
dotnet_naming_rule.private_static_readonly_fields_should_be_PascalCase.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_should_be_PascalCase.style = PascalCase


# IPascalCase
dotnet_naming_rule.interfaces_should_be_IPascalCase.severity = error
dotnet_naming_rule.interfaces_should_be_IPascalCase.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_IPascalCase.style = IPascalCase


# TPascalCase
dotnet_naming_rule.type_parameters_should_be_TPascalCase.severity = error
dotnet_naming_rule.type_parameters_should_be_TPascalCase.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_TPascalCase.style = TPascalCase


# camelCase
dotnet_naming_rule.parameters_should_be_camelCase.severity = suggestion
dotnet_naming_rule.parameters_should_be_camelCase.symbols = parameters
dotnet_naming_rule.parameters_should_be_camelCase.style = camelcase

dotnet_naming_rule.local_variables_should_be_camelCase.severity = suggestion
dotnet_naming_rule.local_variables_should_be_camelCase.symbols = local_variables
dotnet_naming_rule.local_variables_should_be_camelCase.style = camelcase

dotnet_naming_rule.local_constants_should_be_camelCase.severity = suggestion
dotnet_naming_rule.local_constants_should_be_camelCase.symbols = local_constants
dotnet_naming_rule.local_constants_should_be_camelCase.style = camelcase

dotnet_naming_rule.private_fields_should_be__camelCase.severity = error
dotnet_naming_rule.private_fields_should_be__camelCase.symbols = private_fields
dotnet_naming_rule.private_fields_should_be__camelCase.style = _camelCase

# Symbol specifications

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interfaces.required_modifiers = 

dotnet_naming_symbols.enums.applicable_kinds = enum
dotnet_naming_symbols.enums.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enums.required_modifiers = 

dotnet_naming_symbols.events.applicable_kinds = event
dotnet_naming_symbols.events.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.events.required_modifiers = 

dotnet_naming_symbols.methods.applicable_kinds = method
dotnet_naming_symbols.methods.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.methods.required_modifiers = 

dotnet_naming_symbols.properties.applicable_kinds = property
dotnet_naming_symbols.properties.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.properties.required_modifiers = 

dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_fields.required_modifiers = 

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_fields.required_modifiers = 

dotnet_naming_symbols.types_and_namespaces.applicable_kinds = namespace, class, struct, interface, enum
dotnet_naming_symbols.types_and_namespaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types_and_namespaces.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameters.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.required_modifiers = 

dotnet_naming_symbols.private_constant_fields.applicable_kinds = field
dotnet_naming_symbols.private_constant_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_constant_fields.required_modifiers = const

dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_symbols.local_variables.applicable_accessibilities = local
dotnet_naming_symbols.local_variables.required_modifiers = 

dotnet_naming_symbols.local_constants.applicable_kinds = local
dotnet_naming_symbols.local_constants.applicable_accessibilities = local
dotnet_naming_symbols.local_constants.required_modifiers = const

dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_symbols.parameters.applicable_accessibilities = *
dotnet_naming_symbols.parameters.required_modifiers = 

dotnet_naming_symbols.public_constant_fields.applicable_kinds = field
dotnet_naming_symbols.public_constant_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_constant_fields.required_modifiers = const

dotnet_naming_symbols.public_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.public_static_readonly_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_symbols.local_functions.applicable_accessibilities = *
dotnet_naming_symbols.local_functions.required_modifiers = 

# Naming styles

# PascalCase
dotnet_naming_style.PascalCase.required_prefix = 
dotnet_naming_style.PascalCase.required_suffix = 
dotnet_naming_style.PascalCase.word_separator = 
dotnet_naming_style.PascalCase.capitalization = pascal_case

dotnet_naming_style.IPascalCase.required_prefix = I
dotnet_naming_style.IPascalCase.required_suffix = 
dotnet_naming_style.IPascalCase.word_separator = 
dotnet_naming_style.IPascalCase.capitalization = pascal_case

dotnet_naming_style.TPascalCase.required_prefix = T
dotnet_naming_style.TPascalCase.required_suffix = 
dotnet_naming_style.TPascalCase.word_separator = 
dotnet_naming_style.TPascalCase.capitalization = pascal_case

# camelCase
dotnet_naming_style.camelCase.required_prefix = 
dotnet_naming_style.camelCase.required_suffix = 
dotnet_naming_style.camelCase.word_separator = 
dotnet_naming_style.camelCase.capitalization = camel_case

dotnet_naming_style._camelCase.required_prefix = _
dotnet_naming_style._camelCase.required_suffix = 
dotnet_naming_style._camelCase.word_separator = 
dotnet_naming_style._camelCase.capitalization = camel_case